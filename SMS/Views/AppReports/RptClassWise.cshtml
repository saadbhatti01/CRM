
@{
    ViewBag.Title = "RptClassWise";
}

<div class="page-inner">
    <div class="page-title">
        <h3 class="breadcrumb-header">Class Wise Student Report</h3>
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible" role="alert" style="margin-bottom:0;">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                Oh snap! @TempData["Error"].
            </div>
        }
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible" role="alert" style="margin-bottom:0;">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                Success! @TempData["Success"].
            </div>
        }
        @if (TempData["Info"] != null)
        {
            <div class="alert alert-info alert-dismissible" role="alert" style="margin-bottom:0;">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                Info! @TempData["Info"].
            </div>
        }
    </div>
    <div id="main-wrapper">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-white">
                    <div class="panel-body">
                        <div id="rootwizard">
                            <div class="row m-b-lg">
                                <div class="col-md-6">
                                    <form>
                                        <div class="row">
                                            <div class="form-group col-md-4">
                                                <label for="ageRangeField">Session</label>
                                                @Html.DropDownList("sesId", (SelectList)ViewData["Session"], "Select Session", new { required = "required", @class = "form-control" })
                                            </div>
                                            <div class="form-group col-md-4">
                                                <label for="ageRangeField">Class</label>
                                                @Html.DropDownList("classId", (SelectList)ViewData["Class"], "Select Class", new { required = "required", @class = "form-control" })
                                            </div>
                                            <div class="form-group col-md-4">
                                                <label for="ageRangeField">Student Status</label>
                                                <select id="stdStatus" name="stdStatus" class="form-control">
                                                    <option value="All">All</option>
                                                    <option value="Active">Active</option>
                                                    <option value="Freeze">Freeze</option>
                                                    <option value="Deactive">Deactive</option>
                                                    <option value="Left">Left</option>
                                                    <option value="Suspeded">Suspended</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-md-12">
                                                <input class="btn btn-primary" type="button" id="show" value="Show">
                                            </div>
                                        </div>
                                    </form>
                                    <hr />
                                </div>
                                <div class="col-md-12">
                                    <div id="StudentDetail">

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>



        </div><!-- Row -->
    </div><!-- Main Wrapper -->

</div>

<script src="../../assets/plugins/jquery/jquery-3.1.0.min.js"></script>

<script type="text/javascript">
    $(function () {
        $("#show").click(function (event) {
            var status = $("#stdStatus").val();
            var sesId = $("#sesId").val();
            var classId = $("#classId").val();

            if (classId != "" || classId != null) {
                $.ajax({
                    url: "@Url.Action("_PopulateClassWise", "AppReports")",
                    data: { SesId: sesId,  ClassId: classId,  Status: status },
                    type: "Get",
                    dataType: "html",
                    success: function (data) {
                        //Whatever result you have got from your controller with html partial view replace with a specific html.
                        // HTML DOM replace
                        $("#StudentDetail").html(data);
                    }
                });
            } else {

            }

        });
    });
</script>



public IActionResult Index(int? usrId)
        {
            try
            {
                var Id = HttpContext.Session.GetInt32("ID");
                HttpClient client = _api.Initial();
                Task<HttpResponseMessage> Data;
                if (Id != null)
                {
                    Data = client.GetAsync("My/GetBlogData?Id=" + Id.ToString());
                }
                else
                {
                    Data = client.GetAsync("My/GetBlogs");
                    TempData["BlogWithOutLogin"] = "BlogWithOutLogin";
                }

                Data.Wait();
                var result = Data.Result;
                if (result.IsSuccessStatusCode)
                {
                    var res = result.Content.ReadAsStringAsync().Result;
                    var List = JsonConvert.DeserializeObject<List<Blog>>(res);
                    TempData["List"] = List;
                }

                else
                {
                    var res = result.Content.ReadAsStringAsync().Result;
                    var errorMsg = JsonConvert.DeserializeObject<ErrorMessage>(res);
                    TempData["Error"] = "" + errorMsg.message + "";
                }
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                TempData["Error"] = "An error occured during getting the request. Please try again later";
                //return View();
            }
            return View();
        }




