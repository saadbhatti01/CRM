@model SMS.Models.SMSModule

@{
    ViewBag.Title = "EditSMSModule";
}

<div class="page-inner">
    <div class="page-title">
        <h3 class="breadcrumb-header">Message Sending Modules<h5>'Checked' for add Module and 'Unchecked' for Delete Module</h5></h3>
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible" role="alert" style="margin-bottom:0;">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                Oh snap! @TempData["Error"].
            </div>
        }
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible" role="alert" style="margin-bottom:0;">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                Success! @TempData["Success"].
            </div>
        }
        @if (TempData["Info"] != null)
        {
            <div class="alert alert-info alert-dismissible" role="alert" style="margin-bottom:0;">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                Info! @TempData["Info"].
            </div>
        }
    </div>
    <div id="main-wrapper">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-white">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">

                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.smId)
                                <div class="row">
                                    <div class="col-md-6 form-group">
                                        <label class="col-md-6">SMS Text</label>
                                        @Html.TextAreaFor(model => model.smText, new { @class = "form-control", @cols = 10, @rows = 4, @maxlength = "100" })
                                    </div>
                                    <div class="col-md-6 form-group">
                                        <label>Status</label>
                                        <select class="form-control" name="smStatus">
                                            <option value="true">Active</option>
                                            <option value="false">Deactive</option>
                                        </select>
                                    </div>
                                    

                                </div>

                                    <div class="row col-md-12 form-group">
                                        <input class="btn btn-primary" type="submit" name="submitButton" value="Update">
                                    </div>

                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SMSModule</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.smId)

        <div class="form-group">
            @Html.LabelFor(model => model.mnId, "mnId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("mnId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.mnId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.smText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.smText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.smText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.smStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.smStatus)
                    @Html.ValidationMessageFor(model => model.smStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.smStatusChangeDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.smStatusChangeDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.smStatusChangeDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isLocked, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isLocked)
                    @Html.ValidationMessageFor(model => model.isLocked, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
